/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package searchengineui;

import javax.swing.JFileChooser;
import java.io.*;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import java.util.Scanner;

/**
 *
 * @author Daniel
 */
public class AddRemoveUI extends javax.swing.JFrame {

    DefaultListModel fileList = new DefaultListModel();
    int numberOfFilesIndexed = fileList.getSize();
    /**
     * Creates new form AddRemoveUI
     */
    public AddRemoveUI() {
        initComponents();
        try{
            File indexedFiles = new File("indexedfiles.txt");
            Scanner scanner = new Scanner(indexedFiles);
            while(scanner.hasNextLine()){
                String line = scanner.nextLine();
                fileList.addElement(line);
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e.toString(), "Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        okButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jPanel1 = new javax.swing.JPanel();
        addButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add/Remove Files");
        getContentPane().setLayout(new java.awt.GridBagLayout());

        okButton.setMnemonic('o');
        okButton.setText("Ok!");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        getContentPane().add(okButton, gridBagConstraints);

        jList1.setModel(fileList);
        jScrollPane2.setViewportView(jList1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 589;
        gridBagConstraints.ipady = 156;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 6);
        getContentPane().add(jScrollPane2, gridBagConstraints);

        jPanel1.setLayout(new java.awt.GridBagLayout());

        addButton.setMnemonic('a');
        addButton.setText("Add File/Directory");
        addButton.setToolTipText("Add files or directories to the index");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 55, 0, 40);
        jPanel1.add(addButton, gridBagConstraints);

        jButton1.setText("Remove Selected");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 100, 0, 65);
        jPanel1.add(jButton1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        getContentPane().add(jPanel1, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        JFileChooser fileDialog = new JFileChooser();
        // Set the Directory
        fileDialog.setCurrentDirectory(new File(System.getProperty("user.home")));
        int result = fileDialog.showOpenDialog(this);

        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileDialog.getSelectedFile();
            // Add the file to the list
            //jTextArea1.append(selectedFile.getAbsolutePath() + "\n");
            fileList.addElement(selectedFile.getAbsolutePath());
            // Index the file here   
            numberOfFilesIndexed = fileList.getSize();
        }
    }//GEN-LAST:event_addButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        // Write the list of filenames to a .cfg file

        BufferedWriter outFile = null;
        try {
            outFile = new BufferedWriter(new FileWriter("search.cfg"));
            //jTextArea1.write(outFile);
        } // Needs error checking here
        catch (IOException ex) {
        } finally {
        }
    }//GEN-LAST:event_okButtonActionPerformed

    private void RemoveItem(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RemoveItem
        // TODO add your handling code here:
        int selectedIndex = jList1.getSelectedIndex();
        if(selectedIndex != -1){
            fileList.remove(selectedIndex); 
            numberOfFilesIndexed = fileList.getSize();
        }                
    }//GEN-LAST:event_RemoveItem

    private void OkButton(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OkButton
        // TODO add your handling code here: 
        
        try{
            File indexedFiles = new File("indexedfiles.txt");
            indexedFiles.createNewFile();            
            Scanner scanner = new Scanner(indexedFiles);
            PrintWriter pw = new PrintWriter(indexedFiles);

            int i;
            for(i=0; i<fileList.getSize(); ++i){
                while(scanner.hasNextLine()){
                    String line = scanner.nextLine();
                    if(line.equals(fileList.elementAt(i).toString())){
                        continue;
                    }
                }
                pw.println(fileList.get(i).toString());                          
            }                      
            pw.close();
            numberOfFilesIndexed = fileList.getSize();
            }
        
        catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.toString(), "Error", JOptionPane.ERROR_MESSAGE);
        }
        this.dispose();       
    }//GEN-LAST:event_OkButton

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddRemoveUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddRemoveUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddRemoveUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddRemoveUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddRemoveUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton okButton;
    // End of variables declaration//GEN-END:variables
}
